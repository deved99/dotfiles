---

- name: Find architecture
  block:
    - ansible.builtin.command:
        cmd: dpkg --print-architecture
      register: temp
    - ansible.builtin.set_fact:
        dpkg_arch: "{{ temp.stdout }}"
  become: yes


- name: Create a temporary directory
  ansible.builtin.tempfile:
    state: directory
    suffix: ansible.node_exporter
  register: tempdir

- name: Set variables
  ansible.builtin.set_fact:
    node_exporter:
      url: "{{ repo_url }}/releases/download/v{{ version }}/{{ filename }}.tar.gz"
      tar_path: "{{ tempdir.path }}/node_exporter.tar.gz"
      dir_path: "{{ tempdir.path }}/{{ filename }}"
  vars:
    repo_url: "https://github.com/prometheus/node_exporter"
    version: "1.6.1"
    filename: "node_exporter-{{ version }}.linux-{{ dpkg_arch }}"

- name: Download node_exporter
  ansible.builtin.get_url:
    url: "{{ node_exporter.url }}"
    dest: "{{ node_exporter.tar_path }}"

- name: Extract tar.gz
  ansible.builtin.unarchive:
    src: "{{ node_exporter.tar_path }}"
    dest: "{{ tempdir.path }}/"
    remote_src: true

- name: Copy binary to path
  ansible.builtin.copy:
    src: "{{ node_exporter.dir_path }}/node_exporter"
    dest: "/usr/local/bin/node_exporter"
    mode: "500"
    remote_src: true

- name: Template unit file
  ansible.builtin.template:
    src: "node_exporter.service.j2"
    dest: "/etc/systemd/system/node_exporter.service"
    mode: "644"

- name: Enable systemd unit
  ansible.builtin.systemd:
    name: node_exporter.service
    state: started
    enabled: true
    daemon_reload: true
