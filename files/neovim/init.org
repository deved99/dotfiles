#+TITLE: Neovim Config
#+PROPERTY: header-args :comments noweb :noweb yes

* Summary
My configuration is composed by:
#+begin_src lua :tangle init.lua
  <<packer/ensure>>
  <<packer/install-plugins>>
  <<programming/treesitter>>
#+end_src
* Packer
Ensure ~packer~ is installed:
#+begin_src lua :noweb-ref packer/ensure
  local ensure_packer = function()
    local fn = vim.fn
    local install_path = fn.stdpath('data')..'/site/pack/packer/start/packer.nvim'
    if fn.empty(fn.glob(install_path)) > 0 then
      fn.system({'git', 'clone', '--depth', '1', 'https://github.com/wbthomason/packer.nvim', install_path})
      vim.cmd [[packadd packer.nvim]]
      return true
    end
    return false
  end

  local packer_bootstrap = ensure_packer()
#+end_src
Than this installs each package:
#+begin_src lua :noweb-ref packer/install-plugins
  require('packer').startup(function(use)
    <<packer/plugins>>
    if packer_bootstrap then
      require('packer').sync()
    end
  end)
#+end_src
This sets an initial value to the ~packer/plugins~ used above:
#+begin_src lua :noweb-ref packer/plugins
    use 'wbthomason/packer.nvim'
#+end_src
* Programming
** Treesitter
Install the used plugin:
#+begin_src lua :noweb-ref packer/plugins
  use {
    'nvim-treesitter/nvim-treesitter',
    run = ':TSUpdate'
  }
#+end_src
Configuration:
#+begin_src lua :noweb-ref programming/treesitter
  require('nvim-treesitter.configs').setup {
    -- Ensure these are installed:
    ensure_installed = { "c", "lua", "rust" },
    sync_install = false,
    auto_install = true,

    highlight = {
      -- `false` will disable the whole extension
      enable = true,
    },
  }
#+end_src
